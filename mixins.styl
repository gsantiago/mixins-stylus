/*
|--------------------------------------------------------------------------
| image-url($file)
|--------------------------------------------------------------------------
| Returns a image path in a url()
|
| Ex:
| $IMG-PATH = '../img/'
| background: image-url('logo.png')
| => background: url('../img/logo.png')
*/
image-url($file)
    if $IMG-PATH is defined
        url($IMG-PATH + $file)
    else
        error('$IMG-PATH is not defined!')


/*
|--------------------------------------------------------------------------
| font-url($file)
|--------------------------------------------------------------------------
| Similar to image-url(), but for fonts
| This mixin is used by font-face() mixin
*/
font-url($file)
    if $FONT-PATH is defined
        url($FONT-PATH + $file)
    else
        error('$FONT-PATH is not defined!')


/*
|--------------------------------------------------------------------------
| sticky-footer($footer-height [, $page-wrap = '.page-wrap'])
|--------------------------------------------------------------------------
| Make a sticky footer
| More in: http://css-tricks.com/snippets/css/sticky-footer/
*/
sticky-footer($footer-height, $page-wrap = '.page-wrap')
    html, body
        height 100%
    {$page-wrap}
        min-height 100%
        margin-bottom -1 * $footer-height
        &:after
            height $footer-height


/*
|--------------------------------------------------------------------------
| size($width [, $height = $width])
|--------------------------------------------------------------------------
| Returns width and height properties.
| If any unit wasn't passed, the 'px' will be added
| Ex:
| size(100%, 500)
| Returns:
| width: 100%;
| height: 500px;
*/
size($width, $height = $width)
    if $width is a 'unit'
        if unit($width)
            width $width
        else
            width unit($width, px)
    else
        width $width
    
    if $height is a 'unit'
        if unit($height)
            height $height
        else
            height unit($height, px)
    else
        height $height


/*
|--------------------------------------------------------------------------
| max-size($width [, $height = $width])
|--------------------------------------------------------------------------
| Similar to size(), but it uses max-width insted of width
| Ex:
| max-size(100%, 500)
| Returns:
| max-width: 100%;
| height: 500px;
*/
max-size($width, $height = $width)
    if $width is a 'unit'
        if unit($width)
            max-width $width
        else
            max-width unit($width, px)
    else
        max-width $width
    
    if $height is a 'unit'
        if unit($height)
            height $height
        else
            height unit($height, px)
    else
        height $height